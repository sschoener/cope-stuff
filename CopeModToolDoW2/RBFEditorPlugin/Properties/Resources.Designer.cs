//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RBFPlugin.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RBFPlugin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bookmarks {
            get {
                object obj = ResourceManager.GetObject("bookmarks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document_open {
            get {
                object obj = ResourceManager.GetObject("document_open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document_save {
            get {
                object obj = ResourceManager.GetObject("document_save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_copy {
            get {
                object obj = ResourceManager.GetObject("edit_copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_cut {
            get {
                object obj = ResourceManager.GetObject("edit_cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_delete {
            get {
                object obj = ResourceManager.GetObject("edit_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_paste {
            get {
                object obj = ResourceManager.GetObject("edit_paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // RBF-Dictionary generated by Cope&apos;s DoW2 Toolbox
        ///// Format: [key] followed by one value per line
        ///// You can add search-paths instead of values by using the following syntax:
        ///// ?ENTRYPOINT:PATH?REMOVE_FROM_FRONT?EXTENSION1:EXTENSION2?ENDING_TO_EXCLUDE1:ENDING_TO_EXCLUDE_2
        ///// e.g. ?ATTRIB:simulation\\attrib\\ebps?simulation\\attrib\\?? or
        ///// ?DATA:art\\race_marine\\troops\\?art\\?motiontree?_1.motiontree
        ///// REMOVE_FROM_FRONT will remove the specified string from the beginning of the paths
        ///// so you  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RBFDictInfo {
            get {
                return ResourceManager.GetString("RBFDictInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // RBF-Library generated by Cope&apos;s DoW2 Toolbox
        ///// each entry starts with [name=name of entry]
        ///// followed by [tags=tag1,tag2,tag3,tag4,...]
        ///// optionally followed by [taggroups=taggroup1,taggroup2,...] (see rbf_library_tags.txt for taggroups)
        ///// followed by [sub=name of submenu] (optional)
        ///// followed by the Corsix&apos; style representation of the value using | as seperator
        ///// Names must be unique.
        ///// Tags are used to determine when to use this entry:
        ///// An entry with a tag &apos;actions&apos; will appear when r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RBFLibInfo {
            get {
                return ResourceManager.GetString("RBFLibInfo", resourceCulture);
            }
        }
    }
}
