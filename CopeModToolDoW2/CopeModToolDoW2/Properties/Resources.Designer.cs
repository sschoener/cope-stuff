//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModTool.FE.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModTool.FE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cope&apos;s DoW2 Toolbox has been developed by Sebastian Schöner aka cope aka Copernicus.
        ///Visit http://forums.relicnews.com/showthread.php?t=244248 to keep your tool up to date.
        ///You are responsible yourself and I won&apos;t take any blame and / or responsibility for any damage this tool might cause.
        ///
        ///Thanks to all testers, helpers and modders; especially to:
        ///Clonesa
        ///Corsix
        ///Doombringer
        ///Exo-Elite
        ///fneep
        ///Kresjah
        ///horusheretic
        ///MartinNJ
        ///Miguel
        ///OneProduct
        ///Quozzo
        ///Santos
        ///Z405
        ///and the entire RelicNews staff an [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap application_exit {
            get {
                object obj = ResourceManager.GetObject("application_exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap applications_settings {
            get {
                object obj = ResourceManager.GetObject("applications_settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bookmarks {
            get {
                object obj = ResourceManager.GetObject("bookmarks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Diagnostics;
        ///using Microsoft.Win32;
        ///
        ///namespace CrudeModStarter
        ///{
        ///	class Program
        ///	{
        ///		const string _modName = &quot;_MODNAME_&quot;;
        ///		
        ///		static void Main(string[] args)
        ///		{
        ///			Console.WriteLine(&quot;Cope&apos;s Crude DoW2 ModLauncher&quot;);
        ///			Console.WriteLine(&quot;-----------------------------&quot;);
        ///			Console.WriteLine(&quot;Searching for STEAM...&quot;);
        ///
        ///			string steamPath = GetSteamExe();
        ///			if (steamPath == null)
        ///			{
        ///				Console.WriteLine(&quot;Could not find STEAM!\nPlease ensure that STEAM is in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CrudeLauncherSource {
            get {
                return ResourceManager.GetString("CrudeLauncherSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document {
            get {
                object obj = ResourceManager.GetObject("document", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document_new {
            get {
                object obj = ResourceManager.GetObject("document_new", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document_open {
            get {
                object obj = ResourceManager.GetObject("document_open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap document_save {
            get {
                object obj = ResourceManager.GetObject("document_save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_copy {
            get {
                object obj = ResourceManager.GetObject("edit_copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_cut {
            get {
                object obj = ResourceManager.GetObject("edit_cut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_delete {
            get {
                object obj = ResourceManager.GetObject("edit_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_paste {
            get {
                object obj = ResourceManager.GetObject("edit_paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder {
            get {
                object obj = ResourceManager.GetObject("folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_new {
            get {
                object obj = ResourceManager.GetObject("folder_new", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_open {
            get {
                object obj = ResourceManager.GetObject("folder_open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ---------------------------
        ///-Installation Instructions-
        ///---------------------------
        ///
        ///Place the {0}.module file and the {1} folder in your Dawn of War 2 {2} directory (which is normally located at &lt;your_steam_path&gt;\steamapps\common\dawn of war {3}\).
        ///Now double-click &quot;Launch {0}&quot; to launch the mod. You need the .NET framework (version 2.0 or greater) to start &quot;Launch {0}&quot;.
        ///If you&apos;re not sure whether you&apos;ve got the .NET framework installed, launch &quot;Launch {0}&quot; and see if it crashes.
        ///Note for advanced u [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InstallationInstructions {
            get {
                return ResourceManager.GetString("InstallationInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap toolbox_load {
            get {
                object obj = ResourceManager.GetObject("toolbox_load", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
